# Dependency list for https://github.com/rapidsai/dependency-file-generator
files:
  all:
    output: conda
    matrix:
      cuda: ["12.9", "13.0"]
      arch: [x86_64, aarch64]
    includes:
      - build_wheels
      - cuda_version
      - checks
      - depends_on_cudf
      - depends_on_dask_cudf
      - docs
      - notebook
      - py_version
      - rapids_build_setuptools
      - run
      - test_python
  test_python:
    output: none
    includes:
      - cuda_version
      - py_version
      - test_python
      - depends_on_cuxfilter
  test_notebooks:
    output: none
    includes:
      - cuda_version
      - notebook
      - py_version
      - depends_on_cuxfilter
  checks:
    output: none
    includes:
      - checks
      - py_version
  docs:
    output: none
    includes:
      - cuda_version
      - docs
      - py_version
      - depends_on_cuxfilter
  py_build:
    output: pyproject
    pyproject_dir: python
    extras:
      table: build-system
    includes:
      - rapids_build_setuptools
  py_rapids_build:
    output: pyproject
    pyproject_dir: python
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - build_wheels
  py_run:
    output: pyproject
    pyproject_dir: python
    extras:
      table: project
    includes:
      - depends_on_cudf
      - depends_on_dask_cudf
      - run
  py_test:
    output: pyproject
    pyproject_dir: python
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python
  test_external:
    output: none
    includes:
      - depends_on_cudf
      - depends_on_cuxfilter
      - depends_on_dask_cudf
      - test_external
channels:
  - rapidsai
  - rapidsai-nightly
  - conda-forge
dependencies:
  build_wheels:
    common:
      - output_types: pyproject
        packages:
          - wheel
  cuda_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.0"
            packages:
              - cuda-version=12.0
          - matrix:
              cuda: "12.2"
            packages:
              - cuda-version=12.2
          - matrix:
              cuda: "12.5"
            packages:
              - cuda-version=12.5
          - matrix:
              cuda: "12.8"
            packages:
              - cuda-version=12.8
          - matrix:
              cuda: "12.9"
            packages:
              - cuda-version=12.9
          - matrix:
              cuda: "13.0"
            packages:
              - cuda-version=13.0
  checks:
    common:
      - output_types: [conda, requirements]
        packages:
          - pre-commit
  depends_on_cuxfilter:
    common:
      - output_types: conda
        packages:
          - cuxfilter==25.10.*,>=0.0.0a0
  docs:
    common:
      - output_types: [conda, requirements]
        packages:
          - &bokeh bokeh>=3.1,<=3.6.3
          - &bokeh_sampledata bokeh_sampledata
          - &holoviews holoviews>=1.16.0,<1.21.0a0
          - ipykernel
          - &ipython ipython
          - jupyter_sphinx
          - nbsphinx
          - numpydoc
          - pandoc<=2.0.0 # We should check and fix all "<=" pinnings
          - pydata-sphinx-theme
          - recommonmark
          # the ceiling on sphinx can be removed when https://github.com/spatialaudio/nbsphinx/issues/825 is resolved
          - sphinx>=8.0.0,<8.2.0
          - sphinx_rtd_theme
          - sphinx-markdown-tables
          - sphinxcontrib-websupport
  notebook:
    common:
      - output_types: [conda, requirements]
        packages:
          - *bokeh
          - *bokeh_sampledata
          - *ipython
          - notebook>=0.5.0
      - output_types: [conda]
        packages:
          - cugraph==25.10.*,>=0.0.0a0
          - dask-cuda==25.10.*,>=0.0.0a0
  py_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              py: "3.10"
            packages:
              - python=3.10
          - matrix:
              py: "3.11"
            packages:
              - python=3.11
          - matrix:
              py: "3.12"
            packages:
              - python=3.12
          - matrix:
              py: "3.13"
            packages:
              - python=3.13
          - matrix:
            packages:
              - python>=3.10,<3.14
  rapids_build_setuptools:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - rapids-build-backend>=0.4.0,<0.5.0.dev0
          - setuptools
  run:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - bokeh>=3.1,<=3.6.3
          - datashader>=0.15
          - geopandas>=0.11.0
          - shapely<2.1.0
          - *holoviews
          - jupyter-server-proxy
          - numba>=0.60.0,<0.62.0a0
          - numpy>=1.23,<3.0a0
          - packaging
          - panel>=1.0
      - output_types: conda
        packages:
          - &cupy_unsuffixed cupy>=13.6.0
          - nodejs>=18
          - numba-cuda>=0.19.1,<0.20.0a0
          - libwebp-base
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - numba-cuda[cu12]>=0.19.1,<0.20.0a0
          # fallback to CUDA 13 versions if 'cuda' is '13.*' or not provided
          - matrix:
            packages:
              - numba-cuda[cu13]>=0.19.1,<0.20.0a0
      # NOTE: This is intentionally not broken into groups by a 'cuda_suffixed' selector like
      #       other packages with -cu{nn}x suffixes in this file.
      #       All RAPIDS wheel builds (including in devcontainers) expect cupy to be suffixed.
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - cupy-cuda12x>=13.6.0
          # fallback to CUDA 13 versions if 'cuda' is '13.*' or not provided
          - matrix:
            packages:
              - cupy-cuda13x>=13.6.0
  test_python:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - ipython
          - pytest
          - pytest-cov
          - pytest-xdist
  test_external:
    common:
      - output_types: [conda]
        packages:
          - coverage
          - *cupy_unsuffixed
          - pytest-benchmark
          - pytest-xdist
  depends_on_cudf:
    common:
      - output_types: conda
        packages:
          - &cudf_unsuffixed cudf==25.10.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - cudf-cu12==25.10.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - cudf-cu13==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*cudf_unsuffixed]}
  depends_on_dask_cudf:
    common:
      - output_types: conda
        packages:
          - &dask_cudf_unsuffixed dask-cudf==25.10.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - dask-cudf-cu12==25.10.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - dask-cudf-cu13==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*dask_cudf_unsuffixed]}
